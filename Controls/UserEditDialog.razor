@using invMed.Data
@inject AdminService adminService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudPaper Style="min-height: 640px" Elevation="2">
            <MudContainer Style="text-align: center" MaxWidth="MaxWidth.ExtraSmall">
                @if (input is not null)
                {
                    <MudAvatar Class="mt-12" Size="Size.Large" Color="Color.Secondary">
                    @if (!String.IsNullOrEmpty(input.Name) && !String.IsNullOrEmpty(input.Surname))
                    {
                        @input.Name[0]@input.Surname[0]
                    }
                    </MudAvatar>
                    <MudText Class="mt-4">@input.Name @input.Surname</MudText>
                    <MudText>@role</MudText>
                    <EditForm Model="@input" OnValidSubmit="OnValidSubmit">
                        <DataAnnotationsValidator />
                        <MudTextField Class="mt-6" Label="Id" Disabled="true" @bind-Value="input.Id" For="@(() => input.Id)" />
                        <MudTextField Class="mt-4" Label="Name" @bind-Value="input.Name" For="@(() => input.Name)" />
                        <MudTextField Class="mt-4" Label="Surname" @bind-Value="input.Surname" For="@(() => input.Surname)" />
                        <MudTextField Class="mt-4" Label="User name" @bind-Value="input.UserName" For="@(() => input.UserName)" />
                        <MudTextField Class="mt-4" Label="Email" @bind-Value="input.Email" For="@(() => input.Email)" />
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-4">Save</MudButton>
                    </EditForm>
                }
                else
                {
                    <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
                }
            </MudContainer>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public string userId { get; set; }
    [Parameter] public string role { get; set; }
    private EditAccountInput input;

    void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private async void OnValidSubmit()
    {
        var result = await adminService.UpdateUserInput(input);
        if (result)
        {
            Snackbar.Add("Success, changes saved", Severity.Success);
        }
        else
        {
            Snackbar.Add("Error, changes not changed", Severity.Error);
        }
        await InvokeAsync(StateHasChanged);
    }

    protected override async Task OnInitializedAsync()
    {
        input = await Task.Run(() => adminService.GetEditUserInputById(userId));
    }
}
