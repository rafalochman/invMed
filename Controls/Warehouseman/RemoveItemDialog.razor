@using invMed.Data
@inject WarehousemanService warehousemanService
@inject ISnackbar Snackbar
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor httpContextAccessor

<MudDialog>
    <DialogContent>
        <MudPaper Style="min-height: 640px" Elevation="2">
            <MudContainer Style="text-align: center" MaxWidth="MaxWidth.ExtraSmall">
                <EditForm Model="@input" @bind-IsValid="@success" OnValidSubmit="OnValidSubmit">
                    <DataAnnotationsValidator />
                    <MudText Class="pt-8" Typo="Typo.h6">Wydaj towar</MudText>
                    <MudTextField Label="Bar kod" Immediate="true" @bind-Value="input.BarCode" For="@(() => input.BarCode)" Clearable="true"/>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto mt-4">Dodaj</MudButton>
                </EditForm>

                <MudTable Class="mt-4" Items="@items" Elevation="0" Hover="true" Height="350px" FixedHeader="true" HorizontalScrollbar="true">
                    <HeaderContent>
                        <MudTh>Nr</MudTh>
                        <MudTh>Produkt</MudTh>
                        <MudTh>Bar kod</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nr">@context.Number</MudTd>
                        <MudTd DataLabel="Produkt">@context.ProductName</MudTd>
                        <MudTd DataLabel="Bar kod">@context.BarCode</MudTd>
                    </RowTemplate>
                </MudTable>
                <MudButton Class="mt-4" Variant="Variant.Filled" Color="Color.Primary" @onclick="RemoveItems">Wydaj</MudButton>
            </MudContainer>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {

    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    private RemoveItemInput input = new RemoveItemInput();
    private List<RemoveItemView> items = new List<RemoveItemView>();
    private int number = 1;
    private bool success;

    void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private async void OnValidSubmit()
    {
        var item = await warehousemanService.GetRemoveItemViewByItemBarCode(input.BarCode, number);
        if(item.BarCode != null && !items.Any(x => x.BarCode == item.BarCode))
        {
            items.Add(item);
            number++;
            StateHasChanged();
        }
    }

    private async void RemoveItems()
    {
        if(items.Count > 0)
        {
            var result = await warehousemanService.RemoveItems(items);
            if (result)
            {
                items = new List<RemoveItemView>();
                StateHasChanged();
                Snackbar.Add("Sukces, towar został usunięty.", Severity.Success);
            }
            else
            {
                Snackbar.Add("Błąd, towar nie został usunięty.", Severity.Error);
            }
        }
    }

}