@page "/managerPanel"
@using invMed.Data
@using invMed.Controls.Products
@using invMed.Controls.Search
@using invMed.Data.Enums
@inject IProductsService productsService
@inject IManagerService managerService
@inject NavigationManager NavManager

@attribute [Authorize(Roles = AuthorizeRoleName.Manager)]

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4 mt-4">Panel Managera</MudText>
<MudGrid>
    <MudItem xs="12">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <SearchComponent></SearchComponent>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.HorizontalSplit" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="products">Produkty</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.BarChart" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="report">Raporty</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Inventory" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="inventory">Inwentaryzacja</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3" Style="z-index: 2">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudExpansionPanels Style="width: 100%" DisableBorders="true" Elevation="0" DisableGutters="true">
                <MudExpansionPanel HideIcon="true" @onclick="UpdatePanels">
                    <TitleContent>
                        <div class="d-flex">
                            <MudBadge Visible="@isVisible" Content="@newNotificationsNumber" Color="Color.Primary" Overlap="true" Class="d-flex mt-n2">
                                <MudIcon Class="panelIcon" Icon="@Icons.Material.Filled.Email" />
                            </MudBadge>
                            <MudText Typo="Typo.h6" Class="mr-10 ml-6 mt-n1">Powiadomienia</MudText>
                        </div>
                    </TitleContent>
                    <ChildContent>
                        @if (notifications is not null && notifications.Count != 0)
                        {
                            <MudContainer Style="max-height: 400px; overflow-y: scroll">
                                @foreach (var notification in notifications)
                                {
                                    if (notification.Type == NotificationTypeEnum.ExpirationDate)
                                    {
                                        <MudCard Class="mb-2 mt-2">
                                            <MudCardContent>
                                                <MudText>
                                                    <b>Bliski termin ważności </b>
                                                    @if (notification.IsNew == true)
                                                    {
                                                        <MudChip Size="Size.Small" Color="Color.Info">Nowe</MudChip>
                                                    }
                                                </MudText>
                                                <MudText>@notification.ProductName @notification.Barcode</MudText>
                                                <MudText Typo="Typo.body2">Termin: @notification.ExpirationDate</MudText>
                                            </MudCardContent>
                                        </MudCard>
                                    }
                                    else if (notification.Type == NotificationTypeEnum.SmallAmount)
                                    {
                                        <MudCard Class="mb-2 mt-2" Style="z-index: 2">
                                            <MudCardContent>
                                                <MudText>
                                                    <b>Mała ilość </b>
                                                    @if (notification.IsNew == true)
                                                    {
                                                        <MudChip Size="Size.Small" Color="Color.Info">Nowe</MudChip>
                                                    }
                                                </MudText>
                                                <MudText>@notification.ProductName</MudText>
                                                <MudText Typo="Typo.body2">Ilość: @notification.Amount</MudText>
                                            </MudCardContent>
                                        </MudCard>
                                    }
                                }
                            </MudContainer>
                        }
                    </ChildContent>
                </MudExpansionPanel>
            </MudExpansionPanels>

        </MudPaper>
    </MudItem>

    <MudItem xs="12" lg="6" Style="float: left">
        <MudPaper Elevation="25" Class="pa-4" Style="height: 562px; overflow-y: scroll">
            @if (runOutProducts is not null)
            {
                <MudTable Breakpoint="Breakpoint.Sm" RowsPerPage="5" Elevation="0" Items="@runOutProducts" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Wyczerpujące się produkty</MudText>
                        <MudSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col />
                        <col />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>Nazwa</MudTh>
                        <MudTh>Kategoria</MudTh>
                        <MudTh>Ilość</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nazwa">@context.Name</MudTd>
                        <MudTd DataLabel="Kategoria">@context.Category</MudTd>
                        <MudTd DataLabel="Ilość">@context.Amount</MudTd>
                        <MudTd DataLabel="Komunikat">
                            @if (context.ComunicateType == RunOutComunicateTypeEnum.Empty)
                                {
                                <MudChip Size="Size.Small" Color="Color.Error">Przekroczono stan minimalny</MudChip>
                                }
                                else if (context.ComunicateType == RunOutComunicateTypeEnum.Small)
                                {
                                <MudChip Size="Size.Small" Color="Color.Warning">Pozostała mała ilość</MudChip>
                                }
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] {5}" RowsPerPageString="Produkty na stronę" InfoFormat="{first_item}-{last_item} z {all_items}" />
                    </PagerContent>
                </MudTable>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudPaper>
    </MudItem>

    <MudItem xs="12" lg="6" Style="float: left;">
        <MudPaper Elevation="25" Class="pa-4" Style="height: 562px; overflow-y: scroll">
            @if (expiredItems is not null)
            {
                <MudTable Breakpoint="Breakpoint.Sm" RowsPerPage="5" Elevation="0" Items="@expiredItems" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Towary z bliską datą ważności</MudText>
                        <MudSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col />
                        <col />
                        <col />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>Nazwa</MudTh>
                        <MudTh>Kategoria</MudTh>
                        <MudTh>Barkod</MudTh>
                        <MudTh>Data ważności</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nazwa">@context.ProductName</MudTd>
                        <MudTd DataLabel="Kategoria">@context.ProductCategory</MudTd>
                        <MudTd DataLabel="Barkod">@context.BarCode</MudTd>
                        <MudTd DataLabel="Data ważności">@context.ExpirationDate</MudTd>
                        <MudTd DataLabel="Komunikat">
                            @if (context.ComunicateType == ExpiredComunicateTypeEnum.Expired)
                                {
                                <MudChip Size="Size.Small" Color="Color.Error">Przekroczony termin</MudChip>
                                }
                                else if (context.ComunicateType == ExpiredComunicateTypeEnum.Close)
                                {
                                <MudChip Size="Size.Small" Color="Color.Warning">Bliski termin</MudChip>
                                }
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] {5}" RowsPerPageString="Towary na stronę" InfoFormat="{first_item}-{last_item} z {all_items}" />
                    </PagerContent>
                </MudTable>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    private List<RunOutProductView> runOutProducts;
    private List<ExpiredItemView> expiredItems;
    private List<NotificationView> notifications;

    private int newNotificationsNumber = 0;
    private bool isVisible = false;
    private bool click = false;

    protected override async Task OnInitializedAsync()
    {
        runOutProducts = await productsService.GetRunOutProducts();
        expiredItems = await productsService.GetExpiredItems();

        await UpdateNotificationsBadge();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        RefreshService.RefreshRequested += Refresh;
        return base.OnAfterRenderAsync(firstRender);
    }

    private void Refresh()
    {
        Console.WriteLine(NavManager.Uri);
        if(NavManager.Uri.Contains("managerPanel"))
        {
            NavManager.NavigateTo("/managerPanel", true);
        }
    }

    private async Task UpdatePanels()
    {
        await managerService.ReadNotifications();
        if (click == true)
        {
            await UpdateNotificationsBadge();
        }
        click = true;
    }

    private async Task UpdateNotificationsBadge()
    {
        notifications = await managerService.GetNotifications();

        if (notifications is not null)
        {
            newNotificationsNumber = notifications.Where(x => x.IsNew).Count();
            if (newNotificationsNumber > 0)
            {
                isVisible = true;
            }
            else
            {
                isVisible = false;
            }
        }
    }
}