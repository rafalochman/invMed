@page "/warehousemanPanel"
@using invMed.Data
@inject IDialogService DialogService
@using invMed.Controls.Warehouseman
@inject WarehousemanService warehousemanService

@attribute [Authorize(Roles = "Admin")]

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4 mt-4">Panel Magazyniera</MudText>
<MudGrid>
    <MudItem xs="12">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Search" Color="Color.Primary" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Wyszukiwarka</MudText>
            <MudAutocomplete T="string" Label="Szukaj" Class="ml-4 mr-4" Clearable="true" ResetValueOnEmptyText="true" @bind-Value="searchValue" SearchFunc="@Search" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" />
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" @onclick="OpenAddItemDialog">Przyjmij towar</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Remove" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" @onclick="OpenRemoveItemDialog">Wydaj towar</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.HorizontalSplit" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="products">Produkty</MudButton>
            </div>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Inventory" Class="mx-4" Style="width: 54px; height: 54px;"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="#">Inwentaryzacja</MudButton>
            </div>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" lg="6">
        <MudPaper Elevation="25" Class="pa-4" Style="min-height: 530px;">
            @if (newItems is not null)
            {
                <MudTable Breakpoint="Breakpoint.Sm" RowsPerPage="6" Elevation="0" Items="@newItems" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Przyjęte towary</MudText>
                        <MudToolBarSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>Nazwa</MudTh>
                        <MudTh>Kategoria</MudTh>
                        <MudTh>Barkod</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nazwa">@context.Name</MudTd>
                        <MudTd DataLabel="Kategoria">@context.Category</MudTd>
                        <MudTd DataLabel="Barkod">@context.BarCode</MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] {6}" RowsPerPageString="Towary na stronę" InfoFormat="{first_item}-{last_item} z {all_items}" />
                    </PagerContent>
                </MudTable>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudPaper>
    </MudItem>

    <MudItem xs="12" lg="6">
        <MudPaper Elevation="25" Class="pa-4" Style="min-height: 530px;">
            @if (runOutProducts is not null)
            {
                <MudTable Breakpoint="Breakpoint.Sm" RowsPerPage="5" Elevation="0" Items="@runOutProducts" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Wyczerpujące się produkty</MudText>
                        <MudToolBarSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col />
                        <col />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>Nazwa</MudTh>
                        <MudTh>Kategoria</MudTh>
                        <MudTh>Ilość</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nazwa">@context.Name</MudTd>
                        <MudTd DataLabel="Kategoria">@context.Category</MudTd>
                        <MudTd DataLabel="Ilość">@context.Amount</MudTd>
                        <MudTd DataLabel="Komunikat">
                            @if (context.CommunicateType == true)
                            {
                                <MudChip Size="Size.Small" Color="Color.Error">Przekroczono stan minimalny</MudChip>
                            }
                            else
                            {
                                <MudChip Size="Size.Small" Color="Color.Warning">Pozostała mała ilość</MudChip>
                            }
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] {5}" RowsPerPageString="Produkty na stronę" InfoFormat="{first_item}-{last_item} z {all_items}" />
                    </PagerContent>
                </MudTable>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    private string searchValue;
    private List<NewItemsView> newItems;
    private List<RunOutProductsView> runOutProducts;
    private DialogOptions maxDialogWidth = new DialogOptions() { MaxWidth = MaxWidth.Medium, FullWidth = true };

    protected override async Task OnInitializedAsync()
    {
        newItems = await warehousemanService.GetNewItems();
        runOutProducts = await warehousemanService.GetRunOutProducts();
    }

    private async Task<IEnumerable<string>> Search(string value)
    {
        if (string.IsNullOrEmpty(value))
            return new string[0];

        return await warehousemanService.Search(value);
    }

    private async Task OpenAddItemDialog()
    {
        var dialog = DialogService.Show<AddItemDialog>("Przyjmij towar", maxDialogWidth);
        var result = await dialog.Result;
        if (result is not null)
        {
            newItems = await warehousemanService.GetNewItems();
        }
    }

    private async Task OpenRemoveItemDialog()
    {
        var dialog = DialogService.Show<RemoveItemDialog>("Wydaj towar", maxDialogWidth);
    }
}