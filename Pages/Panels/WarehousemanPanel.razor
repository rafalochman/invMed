@page "/warehousemanPanel"
@using invMed.Data
@using invMed.Controls.Warehouseman
@using invMed.Controls.Products
@using invMed.Controls.Search
@using invMed.Data.Enums
@inject IWarehousemanService warehousemanService
@inject IProductsService productsService
@inject IDialogService DialogService

@attribute [Authorize(Roles = AuthorizeRoleName.Warehouseman)]

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4 mt-4">Panel Magazyniera</MudText>
<MudGrid>
    <MudItem xs="12">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <SearchComponent></SearchComponent>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Add" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" @onclick="OpenAddItemDialog">Przyjmij towar</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Remove" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" @onclick="OpenRemoveItemDialog">Wydaj towar</MudButton>
            </div>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.HorizontalSplit" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="products">Produkty</MudButton>
            </div>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" sm="6" md="6" lg="3">
        <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height: 100px;">
            <MudIcon Icon="@Icons.Material.Filled.Inventory" Class="mx-4 panelIcon"></MudIcon>
            <div>
                <MudButton Class="mt-2 mr-10" Variant="Variant.Filled" Color="Color.Primary" Link="inventory">Inwentaryzacja</MudButton>
            </div>
        </MudPaper>
    </MudItem>

    <MudItem xs="12" lg="6">
        <MudPaper Elevation="25" Class="pa-4" Style="height: 562px; overflow-y: scroll">
            @if (newItems is not null)
            {
                <MudTable Breakpoint="Breakpoint.Sm" RowsPerPage="6" Elevation="0" Items="@newItems" Hover="true" Dense="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Przyjęte towary</MudText>
                        <MudSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col />
                        <col style="width: 20px" />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>Nazwa</MudTh>
                        <MudTh>Kategoria</MudTh>
                        <MudTh>Bar kod</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nazwa">@context.Name</MudTd>
                        <MudTd DataLabel="Kategoria">@context.Category</MudTd>
                        <MudTd DataLabel="Bar kod">@context.BarCode</MudTd>
                        <MudTd DataLabel="Szczegóły">
                            <MudMenu Icon="@Icons.Material.Filled.MoreVert">
                                <MudMenuItem OnClick="@((e) => OpenItemDetailsDialog(context.Id))">Szczegóły</MudMenuItem>
                            </MudMenu>
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] {6}" RowsPerPageString="Towary na stronę" InfoFormat="{first_item}-{last_item} z {all_items}" />
                    </PagerContent>
                </MudTable>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudPaper>
    </MudItem>

    <MudItem xs="12" lg="6">
        <MudPaper Elevation="25" Class="pa-4" Style="height: 562px; overflow-y: scroll">
            @if (runOutProducts is not null)
            {
                <MudTable Breakpoint="Breakpoint.Sm" RowsPerPage="5" Elevation="0" Items="@runOutProducts" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Wyczerpujące się produkty</MudText>
                        <MudSpacer />
                    </ToolBarContent>
                    <ColGroup>
                        <col />
                        <col />
                        <col />
                        <col />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh>Nazwa</MudTh>
                        <MudTh>Kategoria</MudTh>
                        <MudTh>Ilość</MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Nazwa">@context.Name</MudTd>
                        <MudTd DataLabel="Kategoria">@context.Category</MudTd>
                        <MudTd DataLabel="Ilość">@context.Amount</MudTd>
                        <MudTd DataLabel="Komunikat">
                            @if (context.ComunicateType == RunOutComunicateTypeEnum.Empty)
                                {
                                <MudChip Size="Size.Small" Color="Color.Error">Przekroczono stan minimalny</MudChip>
                                }
                                else if (context.ComunicateType == RunOutComunicateTypeEnum.Small)
                                {
                                <MudChip Size="Size.Small" Color="Color.Warning">Pozostała mała ilość</MudChip>
                                }
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager PageSizeOptions="new int[] {5}" RowsPerPageString="Produkty na stronę" InfoFormat="{first_item}-{last_item} z {all_items}" />
                    </PagerContent>
                </MudTable>
            }
            else
            {
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" />
            }
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    private List<NewItemsView> newItems;
    private List<RunOutProductView> runOutProducts;

    protected override async Task OnInitializedAsync()
    {
        newItems = await warehousemanService.GetNewItems();
        runOutProducts = await productsService.GetRunOutProducts();
    }

    private async Task OpenAddItemDialog()
    {
        var dialog = DialogService.Show<AddItemDialog>("Przyjmij towar");
        var result = await dialog.Result;
        if (result is not null)
        {
            newItems = await warehousemanService.GetNewItems();
            runOutProducts = await productsService.GetRunOutProducts();
        }
    }

    private async Task OpenRemoveItemDialog()
    {
        var dialog = DialogService.Show<RemoveItemDialog>("Wydaj towar");
        var result = await dialog.Result;
        if (result is not null)
        {
            runOutProducts = await productsService.GetRunOutProducts();
        }
    }

    private void OpenItemDetailsDialog(int itemId)
    {
        var parameters = new DialogParameters { ["itemId"] = itemId };
        DialogService.Show<ItemDetailsDialog>("Szczegóły", parameters);
    }
}